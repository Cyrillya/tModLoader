--- src/TerrariaNetCore/Terraria/GameContent/UI/States/UIEmotesMenu.cs
+++ src/tModLoader/Terraria/GameContent/UI/States/UIEmotesMenu.cs
@@ -8,6 +_,7 @@
 using Terraria.GameContent.UI.Elements;
 using Terraria.ID;
 using Terraria.Localization;
+using Terraria.ModLoader;
 using Terraria.UI;
 using Terraria.UI.Gamepad;
 
@@ -86,6 +_,12 @@
 			TryAddingList(Language.GetText("UI.EmoteCategoryTownNPCs"), ref currentGroupIndex, 9, GetEmotesTownNPCs());
 			TryAddingList(Language.GetText("UI.EmoteCategoryCritters"), ref currentGroupIndex, 7, GetEmotesCritters());
 			TryAddingList(Language.GetText("UI.EmoteCategoryBosses"), ref currentGroupIndex, 8, GetEmotesBosses());
+
+			var modEmotes = EmoteBubbleLoader.GetAllUnlockedModEmotes();
+			foreach ((Mod mod, List<int> emotes) in modEmotes) {
+				int maxEmotesPerRow = emotes.Count > 11 ? 11 : emotes.Count;
+				TryAddingList(new LocalizedText(mod.Name, mod.DisplayName), ref currentGroupIndex, maxEmotesPerRow, emotes);
+			}
 		}
 
 		private void TryAddingList(LocalizedText title, ref int currentGroupIndex, int maxEmotesPerRow, List<int> emoteIds) {
@@ -94,7 +_,7 @@
 		}
 
 		private List<int> GetEmotesGeneral() {
-			return new List<int> {
+			var list = new List<int> {
 				0,
 				1,
 				2,
@@ -125,10 +_,16 @@
 				147,
 				148
 			};
+
+			if (EmoteBubbleLoader.categoryEmoteLookup.TryGetValue(EmoteID.Category.General, out var modEmotes)) {
+				list.AddRange(from e in modEmotes where e.IsUnlocked() select e.Type);
+			}
+
+			return list;
 		}
 
 		private List<int> GetEmotesRPS() {
-			return new List<int> {
+			var list = new List<int> {
 				36,
 				37,
 				38,
@@ -136,10 +_,16 @@
 				34,
 				35
 			};
+
+			if (EmoteBubbleLoader.categoryEmoteLookup.TryGetValue(EmoteID.Category.Rps, out var modEmotes)) {
+				list.AddRange(from e in modEmotes where e.IsUnlocked() select e.Type);
+			}
+
+			return list;
 		}
 
 		private List<int> GetEmotesItems() {
-			return new List<int> {
+			var list = new List<int> {
 				7,
 				73,
 				74,
@@ -164,10 +_,16 @@
 				129,
 				149
 			};
+
+			if (EmoteBubbleLoader.categoryEmoteLookup.TryGetValue(EmoteID.Category.Items, out var modEmotes)) {
+				list.AddRange(from e in modEmotes where e.IsUnlocked() select e.Type);
+			}
+
+			return list;
 		}
 
 		private List<int> GetEmotesBiomesAndEvents() {
-			return new List<int> {
+			var list = new List<int> {
 				22,
 				23,
 				24,
@@ -192,10 +_,16 @@
 				97,
 				98
 			};
+
+			if (EmoteBubbleLoader.categoryEmoteLookup.TryGetValue(EmoteID.Category.NatureAndWeather, out var modEmotes)) {
+				list.AddRange(from e in modEmotes where e.IsUnlocked() select e.Type);
+			}
+
+			return list;
 		}
 
 		private List<int> GetEmotesTownNPCs() {
-			return new List<int> {
+			var list = new List<int> {
 				101,
 				102,
 				103,
@@ -227,6 +_,12 @@
 				142,
 				145
 			};
+
+			if (EmoteBubbleLoader.categoryEmoteLookup.TryGetValue(EmoteID.Category.Town, out var modEmotes)) {
+				list.AddRange(from e in modEmotes where e.IsUnlocked() select e.Type);
+			}
+
+			return list;
 		}
 
 		private List<int> GetEmotesCritters() {
@@ -258,7 +_,11 @@
 
 			if (NPC.downedMartians)
 				list.Add(71);
-
+				
+			if (EmoteBubbleLoader.categoryEmoteLookup.TryGetValue(EmoteID.Category.CrittersAndMonsters, out var modEmotes)) {
+				list.AddRange(from e in modEmotes where e.IsUnlocked() select e.Type);
+			}
+			
 			return list;
 		}
 
@@ -340,7 +_,12 @@
 
 			if (DD2Event.DownedInvasionAnyDifficulty)
 				list.Add(133);
+				
 
+			if (EmoteBubbleLoader.categoryEmoteLookup.TryGetValue(EmoteID.Category.Dangers, out var modEmotes)) {
+				list.AddRange(from e in modEmotes where e.IsUnlocked() select e.Type);
+			}
+			
 			return list;
 		}
 
